name: Test, lint & publish
on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install just
        run: cargo install just
      - name: Run unit tests
        run: just test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Install just
        run: cargo install just
      - name: Lint code
        run: just lint

  publish:
    name: Publish crate
    runs-on: ubuntu-latest
    needs:
      - test
      - lint
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set version from release tag
        run: |
          release_tag='${{ github.event.release.tag_name }}'
          echo "Release tag $release_tag"
          echo $release_tag | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' || {
            echo 'Release tag must be in the form \d+\.\d+\.\d+'
            false
          }
          version=${release_tag}
          echo "Will publish version $version"
          grep -q 'version = "'$version'"' Cargo.toml
          echo "version=$version" >> "$GITHUB_ENV"
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Publish to crates.io
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
