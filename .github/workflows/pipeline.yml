name: Test, lint & publish
on:
  push:
    branches:
      - main
  pull_request:
  release:
    types:
      - published
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  CARGO_TERM_VERBOSE: 'true'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install just
        run: cargo install just
      - name: Run unit tests
        run: just test

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Install just
        run: cargo install just
      - name: Lint code
        run: just lint

  check-semver:
    name: Check semver changes
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Install just
        run: cargo install just
      - name: Check semver changes
        run: just semver

  publish:
    name: Publish crate
    runs-on: ubuntu-latest
    needs:
      - check-semver
      - test
      - lint
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Publish to crates.io
        run: cargo publish --token ${CARGO_REGISTRY_TOKEN}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
